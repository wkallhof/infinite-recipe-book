@page "/"
@using Newtonsoft.Json
@using InfiniteRecipeBook.Persistence
@inject InfiniteRecipeBook.OpenAI.OpenAIClient Client
@inject RecipeRepository RecipeRepository

  <section class="section">
    <div class="container">

        @* PROMPT *@
        <div class="columns is-centered">
            <div class="column is-9">
                <div class="field has-addons is-hidden-mobile">
                    <p class="control is-expanded">
                        <input class="input is-medium" type="text" placeholder="A savory salmon dish for dinner, serves 2" @bind-value="Prompt" @bind-value:event="oninput">
                    </p>
                    <p class="control">
                        <button class="button is-info is-medium @(IsLoading?"is-loading":"")" @onclick="GenerateRecipes" disabled="@string.IsNullOrWhiteSpace(Prompt)"> Generate </button>
                    </p>
                </div>

                <div class="field is-hidden-tablet is-grouped">
                    <p class="control is-expanded">
                        <textarea class="textarea" type="text" placeholder="A savory salmon dish for dinner, serves 2" @bind-value="Prompt" @bind-value:event="oninput"></textarea>
                    </p>
                </div>
                <div class="field is-hidden-tablet">
                    <p class="control">
                        <button class="button is-info is-medium @(IsLoading?"is-loading":"")" @onclick="GenerateRecipes" disabled="@string.IsNullOrWhiteSpace(Prompt)"> Generate </button>
                    </p>
                </div>
            </div>
        </div>
        
        @* RESULTS *@
        <div class="columns is-centered">
            @foreach(var recipe in Recipes)
            {
                <div class="column is-3">
                    <div class="card">
                        <div class="card-image">
                            <figure class="image is-square">
                                <img src="data:image/png;base64,@recipe.Base64Image">
                            </figure>
                        </div>
                        <div class="card-content">
                            <div class="media">
                                <div class="media-content">
                                    <p class="title is-4">@recipe.Title</p>
                                </div>
                            </div>

                            <div class="content">
                                @recipe.ShortDescription
                            </div>
                        </div>
                        <footer class="card-footer">
                            <a href="/recipe/@recipe.Id" class="card-footer-item">View</a>
                        </footer>
                    </div>
                </div>
            }
        </div>
    </div>
  </section>

  <section class="section">
    <div class="container">

        <h2 class="title is-3">From the Community</h2>
        
        @* RESULTS *@
        <div class="columns is-centered is-multiline">
            @foreach(var recipe in CommunityRecipes)
            {
                <div class="column is-3">
                    <div class="card">
                        <div class="card-image">
                            <figure class="image is-square">
                                <img src="data:image/png;base64,@recipe.Base64Image">
                            </figure>
                        </div>
                        <div class="card-content">
                            <div class="media">
                                <div class="media-content">
                                    <p class="title is-4">@recipe.Title</p>
                                </div>
                            </div>
                        </div>
                        <footer class="card-footer">
                            <a href="/recipe/@recipe.Id" class="card-footer-item">View</a>
                        </footer>
                    </div>
                </div>
            }
        </div>
    </div>
  </section>

@code {

    private List<RecipePreview>? Recipes = new List<RecipePreview>();
    private string? Prompt { get; set; }
    private bool IsLoading { get; set; } = false;

    private List<RecipeRecord> CommunityRecipes = new List<RecipeRecord>();

    protected override void OnInitialized()
    {
        CommunityRecipes = RecipeRepository.GetAll().OrderBy(x => new Guid()).Take(8).ToList();
    }

    private async Task GenerateRecipes()
    {
        IsLoading = true;
        Recipes = (await Client.GenerateData<List<RecipePreview>>("Generate 3 recipes using the following prompt: "+Prompt))?.Take(3).ToList();

        await Task.WhenAll(Recipes.Select(x => LoadImage(x)));
        Recipes.ForEach(x => PersistRecipe(x));

        StateHasChanged();
        IsLoading = false;
    }

    private async Task LoadImage(RecipePreview recipe)
    {
        recipe.Base64Image = await Client.GetImageFromPrompt($"Mouth watering, pulled back product image of {recipe.Title} - {recipe.ShortDescription}");
    }

    private void PersistRecipe(RecipePreview recipe)
    {
        recipe.Id = RecipeRepository.Insert(new RecipeRecord()
            {
                Title = recipe.Title,
                ShortDescription = recipe.ShortDescription,
                Base64Image = recipe.Base64Image
            });
    }

    public class RecipePreview
    {
        public string Title { get; set; }
        public string ShortDescription { get; set; }

        [JsonIgnore]
        public string Base64Image { get; set; }

        [JsonIgnore]
        public Guid Id { get; set; }
    }
}